- **Desarrollo con Angular:** Para el desarrollo con front end me he decidido por [Angular](https://angular.io/) ya que
  es el framework Javascript, el cual tengo mayor experiencia, y me con el que ha tocado resolver en varios proyectos,
  adicionalmente la plataforma Azure da 100% soporte para esta tecnología, las novedades de Angular 16 y 17, es algo
  que realmente le hacia falta, sobretodo el soporte de unit testing usando [Jest.js](https://jestjs.io/). Otro
  aspecto importante es la librería de componentes [Angular Material](https://material.angular.io/) y el
  gestor de estado [NGRX](https://ngrx.io/) que combinados con Angular permiten ahorrar mucho trabajo, lo que
  permite tambien ahorrar tiempo y dinero. Angular es un framework ideal para sitios web grandes como: ERPs, banca
  en linea, tiendas online, plataforma educativas, entro tipo de empresas.

- **Desarrollo con Firebase:** La plataforma [Firebase](https://firebase.google.com) te permite desarrollar apps sin
  preocuparte por la complejidad del back end, ya que se basa en el modelo **back end como servicio (BasS)** el cual te
  brinda soluciones pre construidas de solo conectar y usar, firebase es compatible con flutter gracias a la librería
  [Flutter Fire](https://firebase.flutter.dev/), esto permite dar soluciones rapidas al cliente, ahorrando costos ideal
  para pequeños negocios.

### Soluciones con Web3

- **Desarrollo con Smart Contract:** Para el desarrollo DApps, las cuales son sistemas basados en Web3, DeFi y Blockchain,
  es necesario desarrollar mini programas llamados smart contract o contrato inteligente estos es tan echo con el lenguaje
  [solidity](https://soliditylang.org/), para eso me apoyo en el framework [truflle](https://trufflesuite.com/) y
  [metamask](https://metamask.io/). Los contratos inteligentes son compatible con flutter gracias a la libreria
  [web3dart](https://pub.dev/packages/web3dart). Todo este nuevo ecosistema es muy usado dentro de la industria FinTech.

- **Desarrollo con Azure Functions:** Otra alternativa que ofrece [Azure](https://azure.microsoft.com/en-us), con
  filosofia de plataforma como servicio (PasS) son las
  [Azure Functions](https://azure.microsoft.com/en-us/products/functions) la cual nos permite crear microservicio
  bajo la filosofia ServerLess simplificando la manera de crear un back end sin necesida de lidiar con la
  complejidad de la infraestructura.


### Integraciones de APIs

- **Integracion con la Gemini API:** A partir del **2022 el auge de la inteligencia  artificial** se ha echo muy
  importante y es necesario brindar soluciones en este area, para eso me apoyo con el
  [AI Studio](https://aistudio.google.com/app/prompts/new_chat)para usa el modelo
  [Gemini](https://gemini.google.com/app) proveido por Google usando la libreria
  [google_generative_ai ](https://pub.dev/packages/google_generative_ai)la cual es compatible con flutter para
  implementar modelos IA desde la nube usando la API de Gemini consultar la [documentacion](https://ai.google.dev/)